{"version":3,"file":"static/js/924.fb8a64f8.chunk.js","mappings":"8SAEMA,EAAU,mCACVC,EAAM,gCAEL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEoBC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,sCACeD,IAHnC,cAEGI,EAFH,yBAKIA,EAASC,KAAKC,SALlB,gCAOHC,QAAQC,MAAR,MAPG,gFAWA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAkCC,GAAlC,gGAEoBP,EAAAA,EAAAA,IAAA,UAClBF,EADkB,gCACSD,EADT,kBAC0BU,EAD1B,wCAFpB,cAEGN,EAFH,yBAMIA,EAASC,KAAKC,SANlB,gCAQHC,QAAQC,MAAR,MARG,gFAYA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,gGAEoBT,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACNW,EADM,oBACQZ,EADR,oBAFpB,cAEGI,EAFH,yBAKIA,EAASC,MALb,gCAOHE,QAAQC,MAAR,MAPG,gFAWA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA4BD,GAA5B,gGAEoBT,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACNW,EADM,4BACgBZ,EADhB,oBAFpB,cAEGI,EAFH,yBAKIA,EAASC,KAAKS,MALlB,gCAOHP,QAAQC,MAAR,MAPG,gFAWA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAA+BH,GAA/B,gGAEoBT,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACNW,EADM,4BACgBZ,EADhB,2BAFpB,cAEGI,EAFH,yBAKIA,EAASC,KAAKC,SALlB,gCAOHC,QAAQC,MAAR,MAPG,gF,2GCjDP,EAAuB,uBAAvB,EAAqD,uBAArD,EAAwF,4BAAxF,EAA2H,uBAA3H,EAA0J,wB,SCwB1J,EAxBiB,SAAC,GAAc,IAAZM,EAAW,EAAXA,KAClB,OACE,eAAIE,UAAWC,EAAf,gBACGH,QADH,IACGA,OADH,EACGA,EAAMI,KAAI,YAAiD,IAA9CC,EAA6C,EAA7CA,aAAcC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,UAAWC,EAAc,EAAdA,QAC3C,OACE,gBAAkBN,UAAWC,EAA7B,WACE,gBACED,UAAWC,EACXM,IACEJ,EAAY,0CAC2BA,GACnCK,EAAQ,IAEdC,IAAKL,KAEP,cAAGJ,UAAWC,EAAd,SAAuBG,KACvB,eAAGJ,UAAWC,EAAd,wBAAuCI,OAXhCC,EAcZ,KAGN,ECDD,EAlBa,WACX,OAAwBI,EAAAA,EAAAA,UAAS,IAAjC,eAAOZ,EAAP,KAAaa,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAKR,OAHAE,EAAAA,EAAAA,YAAU,YACRjB,EAAAA,EAAAA,IAAakB,OAAOH,IAAUI,MAAK,SAAAlB,GAAI,OAAIa,EAAQb,EAAZ,GACxC,GAAE,CAACc,KAEF,yBACGd,GACC,SAAC,EAAD,CAAUA,KAAMA,KAEhB,oEAIP,C","sources":["API/movie-api.js","webpack://goit-react-hw-05-movies/./src/components/CastInfo/CastInfo.module.css?0a17","components/CastInfo/CastInfo.js","components/Cast/Cast.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'd2588012985fa449416b0dc96cb20979';\nconst url = 'https://api.themoviedb.org/3/';\n\nexport async function getTrendingMovie() {\n  try {\n    const response = await axios.get(\n      `${url}trending/movie/day?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getSearchMovieList(query) {\n  try {\n    const response = await axios.get(\n      `${url}search/movie?api_key=${API_KEY}&query=${query}&language=en-US&include_adult=false`\n    );\n\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMovieDetails(id) {\n  try {\n    const response = await axios.get(\n      `${url}movie/${id}?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMovieCast(id) {\n  try {\n    const response = await axios.get(\n      `${url}movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMovieReviews(id) {\n  try {\n    const response = await axios.get(\n      `${url}movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"CastInfo_list__Pb+aF\",\"item\":\"CastInfo_item__E00bZ\",\"character\":\"CastInfo_character__ZmsBc\",\"name\":\"CastInfo_name__LXyfT\",\"image\":\"CastInfo_image__L6pSr\"};","import s from './CastInfo.module.css';\nconst CastInfo = ({ cast }) => {\n  return (\n    <ul className={s.list}>\n      {cast?.map(({ profile_path, name, character, cast_id }) => {\n        return (\n          <li key={cast_id} className={s.item}>\n            <img\n              className={s.image}\n              src={\n                profile_path\n                  ? `https://image.tmdb.org/t/p/w200/${profile_path}`\n                  : require('../../images/no-photo-available-icon-20.jpg')\n              }\n              alt={name}\n            />\n            <p className={s.name}>{name}</p>\n            <p className={s.character}>Character: {character}</p>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default CastInfo;\n","import { getMovieCast } from '../../API/movie-api';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport CastInfo from 'components/CastInfo';\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieCast(Number(movieId)).then(cast => setCast(cast));\n  }, [movieId]);\n  return (\n    <div>\n      {cast ? (\n        <CastInfo cast={cast} />\n      ) : (\n        <h4>We don't have any cast for this movie.</h4>\n      )}\n    </div>\n  );\n};\n\nexport default Cast;\n"],"names":["API_KEY","url","getTrendingMovie","axios","response","data","results","console","error","getSearchMovieList","query","getMovieDetails","id","getMovieCast","cast","getMovieReviews","className","s","map","profile_path","name","character","cast_id","src","require","alt","useState","setCast","movieId","useParams","useEffect","Number","then"],"sourceRoot":""}